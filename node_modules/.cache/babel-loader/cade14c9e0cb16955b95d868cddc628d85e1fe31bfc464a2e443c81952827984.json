{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Music/OwnGuitar/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SoundfontProvider from \"./soundfontprovider\";\nimport { createRoot } from 'react-dom/client';\nimport Guitar, { getRenderFingerSpn } from \"react-guitar\";\nimport { standard } from \"react-guitar-tunings\";\nimport useSound from \"react-guitar-sound\";\nimport \"./styles.css\";\nimport _ from \"lodash\";\n// import \"react-piano/dist/styles.css\";\nimport \"./react-piano-master/src/styles.css\";\nimport PianoWithRecording from \"./PianoWithRecording\";\nimport \"react-toggle/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SampleGuitarWithSound() {\n  _s();\n  const [strings, setStrings] = useState([0, 0, 0, 0, 0, 0]);\n  const {\n    play\n  } = useSound({\n    fretting: strings,\n    tuning: standard\n  });\n  const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  const soundfontHostname = \"https://d1pzp51pvbm36p.cloudfront.net\";\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [recording, setRecording] = useState({\n    events: [],\n    currentEvents: []\n  });\n  const [showMusicalTyping] = useState(true);\n  const [accidentalType] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '.5em'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SoundfontProvider, {\n      instrumentName: \"acoustic_grand_piano\",\n      audioContext: audioContext,\n      hostname: soundfontHostname,\n      render: _ref => {\n        let {\n          isLoading,\n          playNote,\n          stopNote\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(PianoWithRecording, {\n          recording: recording,\n          isPlaying: isPlaying,\n          setRecording: setRecording,\n          noteRange: {\n            first: 53,\n            last: 79\n          },\n          playNote: playNote,\n          noteToPlay: 60,\n          stopNote: stopNote,\n          disabled: isLoading,\n          accidentalType: accidentalType,\n          showMusicalTyping: showMusicalTyping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Guitar, {\n      strings: strings,\n      onChange: setStrings,\n      frets: {\n        from: 0,\n        amount: 15\n      },\n      playOnHover: true,\n      onPlay: play\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(SampleGuitarWithSound, \"bI5u1syg7et2Z4TVl3uGPtWn7Jw=\", false, function () {\n  return [useSound];\n});\n_c = SampleGuitarWithSound;\ncreateRoot(document.getElementById(\"root\")).render( /*#__PURE__*/_jsxDEV(SampleGuitarWithSound, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 52\n}, this));\nvar _c;\n$RefreshReg$(_c, \"SampleGuitarWithSound\");","map":{"version":3,"names":["React","useState","SoundfontProvider","createRoot","Guitar","getRenderFingerSpn","standard","useSound","_","PianoWithRecording","SampleGuitarWithSound","strings","setStrings","play","fretting","tuning","audioContext","window","AudioContext","webkitAudioContext","soundfontHostname","isPlaying","setIsPlaying","recording","setRecording","events","currentEvents","showMusicalTyping","accidentalType","fontSize","isLoading","playNote","stopNote","first","last","from","amount","document","getElementById","render"],"sources":["/Users/macbook/Desktop/Music/OwnGuitar/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport SoundfontProvider from \"./soundfontprovider\";\nimport { createRoot } from 'react-dom/client'\nimport Guitar, { getRenderFingerSpn } from \"react-guitar\";\nimport { standard } from \"react-guitar-tunings\";\nimport useSound from \"react-guitar-sound\";\nimport \"./styles.css\";\nimport _ from \"lodash\";\n// import \"react-piano/dist/styles.css\";\nimport \"./react-piano-master/src/styles.css\";\nimport PianoWithRecording from \"./PianoWithRecording\";\nimport \"react-toggle/style.css\";\n\n\n\nfunction SampleGuitarWithSound() {\n    const [strings, setStrings] = useState([0, 0, 0, 0, 0, 0])\n  const { play } = useSound({ fretting: strings, tuning: standard });\n  const audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = \"https://d1pzp51pvbm36p.cloudfront.net\";\nconst [isPlaying, setIsPlaying] = useState(false);\nconst [recording, setRecording] = useState({\n  events: [],\n  currentEvents: [],\n});\n\n\nconst [showMusicalTyping] = useState(true);\nconst [accidentalType] = useState(0);\n\n  return (\n      \n    <div style={{ fontSize: '.5em' }}>\n     \n          <SoundfontProvider\n            instrumentName=\"acoustic_grand_piano\"\n            audioContext={audioContext}\n            hostname={soundfontHostname}\n            render={({ isLoading, playNote, stopNote }) => (\n              <PianoWithRecording\n                recording={recording}\n                isPlaying={isPlaying}\n                setRecording={setRecording}\n                noteRange={{ first: 53, last: 79 }}\n                playNote={playNote}\n                noteToPlay={60}\n                stopNote={stopNote}\n                disabled={isLoading}\n                accidentalType={accidentalType}\n                showMusicalTyping={showMusicalTyping}\n              />\n            )}\n          />\n       \n     \n <Guitar\n      strings={strings}\n      onChange={setStrings}\n      frets={{\n       from: 0,\n       amount:  15,\n         }}\n      playOnHover\n      onPlay={play}\n    />\n    </div>\n   \n  );\n}\n\n\ncreateRoot(document.getElementById(\"root\")).render(<SampleGuitarWithSound />);\n\n\n \n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,MAAM,IAAIC,kBAAkB,QAAQ,cAAc;AACzD,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAO,cAAc;AACrB,OAAOC,CAAC,MAAM,QAAQ;AACtB;AACA,OAAO,qCAAqC;AAC5C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAO,wBAAwB;AAAC;AAIhC,SAASC,qBAAqB,GAAG;EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM;IAAEY;EAAK,CAAC,GAAGN,QAAQ,CAAC;IAAEO,QAAQ,EAAEH,OAAO;IAAEI,MAAM,EAAET;EAAS,CAAC,CAAC;EAClE,MAAMU,YAAY,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,GAAG;EAC/E,MAAMC,iBAAiB,GAAG,uCAAuC;EACjE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC;IACzCwB,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE;EACjB,CAAC,CAAC;EAGF,MAAM,CAACC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC2B,cAAc,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EAElC,oBAEE;IAAK,KAAK,EAAE;MAAE4B,QAAQ,EAAE;IAAO,CAAE;IAAA,wBAE3B,QAAC,iBAAiB;MAChB,cAAc,EAAC,sBAAsB;MACrC,YAAY,EAAEb,YAAa;MAC3B,QAAQ,EAAEI,iBAAkB;MAC5B,MAAM,EAAE;QAAA,IAAC;UAAEU,SAAS;UAAEC,QAAQ;UAAEC;QAAS,CAAC;QAAA,oBACxC,QAAC,kBAAkB;UACjB,SAAS,EAAET,SAAU;UACrB,SAAS,EAAEF,SAAU;UACrB,YAAY,EAAEG,YAAa;UAC3B,SAAS,EAAE;YAAES,KAAK,EAAE,EAAE;YAAEC,IAAI,EAAE;UAAG,CAAE;UACnC,QAAQ,EAAEH,QAAS;UACnB,UAAU,EAAE,EAAG;UACf,QAAQ,EAAEC,QAAS;UACnB,QAAQ,EAAEF,SAAU;UACpB,cAAc,EAAEF,cAAe;UAC/B,iBAAiB,EAAED;QAAkB;UAAA;UAAA;UAAA;QAAA,QACrC;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF,eAGX,QAAC,MAAM;MACF,OAAO,EAAEhB,OAAQ;MACjB,QAAQ,EAAEC,UAAW;MACrB,KAAK,EAAE;QACNuB,IAAI,EAAE,CAAC;QACPC,MAAM,EAAG;MACP,CAAE;MACL,WAAW;MACX,MAAM,EAAEvB;IAAK;MAAA;MAAA;MAAA;IAAA,QACb;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAGV;AAAC,GArDQH,qBAAqB;EAAA,QAEXH,QAAQ;AAAA;AAAA,KAFlBG,qBAAqB;AAwD9BP,UAAU,CAACkC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAACC,MAAM,eAAC,QAAC,qBAAqB;EAAA;EAAA;EAAA;AAAA,QAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}