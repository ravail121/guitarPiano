{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Music/OwnGuitar/src/react-piano-master/src/Keyboard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport range from 'just-range';\nimport classNames from 'classnames';\nimport Key from './Key';\nimport MidiNumbers from './MidiNumbers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Keyboard extends React.Component {\n  // Range of midi numbers on keyboard\n  getMidiNumbers() {\n    return range(this.props.noteRange.first, this.props.noteRange.last + 1);\n  }\n  getNaturalKeyCount() {\n    return this.getMidiNumbers().filter(number => {\n      const {\n        isAccidental\n      } = MidiNumbers.getAttributes(number);\n      return !isAccidental;\n    }).length;\n  }\n\n  // Returns a ratio between 0 and 1\n  getNaturalKeyWidth() {\n    return 1 / this.getNaturalKeyCount();\n  }\n  getWidth() {\n    return this.props.width ? this.props.width : '100%';\n  }\n  getHeight() {\n    if (!this.props.width) {\n      return '100%';\n    }\n    const keyWidth = this.props.width * this.getNaturalKeyWidth();\n    return `${keyWidth / this.props.keyWidthToHeight}px`;\n  }\n  render() {\n    const naturalKeyWidth = this.getNaturalKeyWidth();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames('ReactPiano__Keyboard', this.props.className),\n      style: {\n        width: this.getWidth(),\n        height: this.getHeight()\n      },\n      children: this.getMidiNumbers().map(midiNumber => {\n        const {\n          note,\n          isAccidental\n        } = MidiNumbers.getAttributes(midiNumber);\n        const isActive = !this.props.disabled && this.props.activeNotes.includes(midiNumber);\n        return /*#__PURE__*/_jsxDEV(Key, {\n          naturalKeyWidth: naturalKeyWidth,\n          midiNumber: midiNumber,\n          noteRange: this.props.noteRange,\n          active: isActive,\n          accidental: isAccidental,\n          disabled: this.props.disabled,\n          onPlayNoteInput: this.props.onPlayNoteInput,\n          onStopNoteInput: this.props.onStopNoteInput,\n          gliss: this.props.gliss,\n          useTouchEvents: this.props.useTouchEvents,\n          children: this.props.disabled ? null : this.props.renderNoteLabel({\n            isActive,\n            isAccidental,\n            midiNumber\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n}\nKeyboard.propTypes = {\n  noteRange: noteRangePropType,\n  activeNotes: PropTypes.arrayOf(PropTypes.number),\n  onPlayNoteInput: PropTypes.func.isRequired,\n  onStopNoteInput: PropTypes.func.isRequired,\n  renderNoteLabel: PropTypes.func.isRequired,\n  keyWidthToHeight: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  gliss: PropTypes.bool,\n  useTouchEvents: PropTypes.bool,\n  // If width is not provided, must have fixed width and height in parent container\n  width: PropTypes.number\n};\nKeyboard.defaultProps = {\n  disabled: false,\n  gliss: false,\n  useTouchEvents: false,\n  keyWidthToHeight: 0.33,\n  renderNoteLabel: () => {}\n};\nfunction isNaturalMidiNumber(value) {\n  if (typeof value !== 'number') {\n    return false;\n  }\n  return MidiNumbers.NATURAL_MIDI_NUMBERS.includes(value);\n}\nfunction noteRangePropType(props, propName, componentName) {\n  const {\n    first,\n    last\n  } = props[propName];\n  if (!first || !last) {\n    return new Error(`Invalid prop ${propName} supplied to ${componentName}. ${propName} must be an object with .first and .last values.`);\n  }\n  if (!isNaturalMidiNumber(first) || !isNaturalMidiNumber(last)) {\n    return new Error(`Invalid prop ${propName} supplied to ${componentName}. ${propName} values must be valid MIDI numbers, and should not be accidentals (sharp or flat notes).`);\n  }\n  if (first >= last) {\n    return new Error(`Invalid prop ${propName} supplied to ${componentName}. ${propName}.first must be smaller than ${propName}.last.`);\n  }\n}\nexport default Keyboard;","map":{"version":3,"names":["React","PropTypes","range","classNames","Key","MidiNumbers","Keyboard","Component","getMidiNumbers","props","noteRange","first","last","getNaturalKeyCount","filter","number","isAccidental","getAttributes","length","getNaturalKeyWidth","getWidth","width","getHeight","keyWidth","keyWidthToHeight","render","naturalKeyWidth","className","height","map","midiNumber","note","isActive","disabled","activeNotes","includes","onPlayNoteInput","onStopNoteInput","gliss","useTouchEvents","renderNoteLabel","propTypes","noteRangePropType","arrayOf","func","isRequired","string","bool","defaultProps","isNaturalMidiNumber","value","NATURAL_MIDI_NUMBERS","propName","componentName","Error"],"sources":["/Users/macbook/Desktop/Music/OwnGuitar/src/react-piano-master/src/Keyboard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport range from 'just-range';\nimport classNames from 'classnames';\n\nimport Key from './Key';\nimport MidiNumbers from './MidiNumbers';\n\nclass Keyboard extends React.Component {\n  static propTypes = {\n    noteRange: noteRangePropType,\n    activeNotes: PropTypes.arrayOf(PropTypes.number),\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    keyWidthToHeight: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    gliss: PropTypes.bool,\n    useTouchEvents: PropTypes.bool,\n    // If width is not provided, must have fixed width and height in parent container\n    width: PropTypes.number,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    gliss: false,\n    useTouchEvents: false,\n    keyWidthToHeight: 0.33,\n    renderNoteLabel: () => {},\n  };\n\n  // Range of midi numbers on keyboard\n  getMidiNumbers() {\n    return range(this.props.noteRange.first, this.props.noteRange.last + 1);\n  }\n\n  getNaturalKeyCount() {\n    return this.getMidiNumbers().filter((number) => {\n      const { isAccidental } = MidiNumbers.getAttributes(number);\n      return !isAccidental;\n    }).length;\n  }\n\n  // Returns a ratio between 0 and 1\n  getNaturalKeyWidth() {\n    return 1 / this.getNaturalKeyCount();\n  }\n\n  getWidth() {\n    return this.props.width ? this.props.width : '100%';\n  }\n\n  getHeight() {\n    if (!this.props.width) {\n      return '100%';\n    }\n    const keyWidth = this.props.width * this.getNaturalKeyWidth();\n    return `${keyWidth / this.props.keyWidthToHeight}px`;\n  }\n\n  render() {\n    const naturalKeyWidth = this.getNaturalKeyWidth();\n    return (\n      <div\n        className={classNames('ReactPiano__Keyboard', this.props.className)}\n        style={{ width: this.getWidth(), height: this.getHeight() }}\n      >\n        {this.getMidiNumbers().map((midiNumber) => {\n          const { note, isAccidental } = MidiNumbers.getAttributes(midiNumber);\n          const isActive = !this.props.disabled && this.props.activeNotes.includes(midiNumber);\n          return (\n            <Key\n              naturalKeyWidth={naturalKeyWidth}\n              midiNumber={midiNumber}\n              noteRange={this.props.noteRange}\n              active={isActive}\n              accidental={isAccidental}\n              disabled={this.props.disabled}\n              onPlayNoteInput={this.props.onPlayNoteInput}\n              onStopNoteInput={this.props.onStopNoteInput}\n              gliss={this.props.gliss}\n              useTouchEvents={this.props.useTouchEvents}\n              \n            >\n              {this.props.disabled\n                ? null\n                : this.props.renderNoteLabel({\n                    isActive,\n                    isAccidental,\n                    midiNumber,\n                  })}\n            </Key>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction isNaturalMidiNumber(value) {\n  if (typeof value !== 'number') {\n    return false;\n  }\n  return MidiNumbers.NATURAL_MIDI_NUMBERS.includes(value);\n}\n\nfunction noteRangePropType(props, propName, componentName) {\n  const { first, last } = props[propName];\n  if (!first || !last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} must be an object with .first and .last values.`,\n    );\n  }\n  if (!isNaturalMidiNumber(first) || !isNaturalMidiNumber(last)) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} values must be valid MIDI numbers, and should not be accidentals (sharp or flat notes).`,\n    );\n  }\n  if (first >= last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName}.first must be smaller than ${propName}.last.`,\n    );\n  }\n}\n\nexport default Keyboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}