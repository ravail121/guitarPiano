{"ast":null,"code":"module.exports = ADSR;\nfunction ADSR(audioContext) {\n  var node = audioContext.createGain();\n  var voltage = node._voltage = getVoltage(audioContext);\n  var value = scale(voltage);\n  var startValue = scale(voltage);\n  var endValue = scale(voltage);\n  node._startAmount = scale(startValue);\n  node._endAmount = scale(endValue);\n  node._multiplier = scale(value);\n  node._multiplier.connect(node);\n  node._startAmount.connect(node);\n  node._endAmount.connect(node);\n  node.value = value.gain;\n  node.startValue = startValue.gain;\n  node.endValue = endValue.gain;\n  node.startValue.value = 0;\n  node.endValue.value = 0;\n  Object.defineProperties(node, props);\n  return node;\n}\nvar props = {\n  attack: {\n    value: 0,\n    writable: true\n  },\n  decay: {\n    value: 0,\n    writable: true\n  },\n  sustain: {\n    value: 1,\n    writable: true\n  },\n  release: {\n    value: 0,\n    writable: true\n  },\n  getReleaseDuration: {\n    value: function () {\n      return this.release;\n    }\n  },\n  start: {\n    value: function (at) {\n      var target = this._multiplier.gain;\n      var startAmount = this._startAmount.gain;\n      var endAmount = this._endAmount.gain;\n      this._voltage.start(at);\n      this._decayFrom = this._decayFrom = at + this.attack;\n      this._startedAt = at;\n      var sustain = this.sustain;\n      target.cancelScheduledValues(at);\n      startAmount.cancelScheduledValues(at);\n      endAmount.cancelScheduledValues(at);\n      endAmount.setValueAtTime(0, at);\n      if (this.attack) {\n        target.setValueAtTime(0, at);\n        target.linearRampToValueAtTime(1, at + this.attack);\n        startAmount.setValueAtTime(1, at);\n        startAmount.linearRampToValueAtTime(0, at + this.attack);\n      } else {\n        target.setValueAtTime(1, at);\n        startAmount.setValueAtTime(0, at);\n      }\n      if (this.decay) {\n        target.setTargetAtTime(sustain, this._decayFrom, getTimeConstant(this.decay));\n      }\n    }\n  },\n  stop: {\n    value: function (at, isTarget) {\n      if (isTarget) {\n        at = at - this.release;\n      }\n      var endTime = at + this.release;\n      if (this.release) {\n        var target = this._multiplier.gain;\n        var startAmount = this._startAmount.gain;\n        var endAmount = this._endAmount.gain;\n        target.cancelScheduledValues(at);\n        startAmount.cancelScheduledValues(at);\n        endAmount.cancelScheduledValues(at);\n        var expFalloff = getTimeConstant(this.release);\n\n        // truncate attack (required as linearRamp is removed by cancelScheduledValues)\n        if (this.attack && at < this._decayFrom) {\n          var valueAtTime = getValue(0, 1, this._startedAt, this._decayFrom, at);\n          target.linearRampToValueAtTime(valueAtTime, at);\n          startAmount.linearRampToValueAtTime(1 - valueAtTime, at);\n          startAmount.setTargetAtTime(0, at, expFalloff);\n        }\n        endAmount.setTargetAtTime(1, at, expFalloff);\n        target.setTargetAtTime(0, at, expFalloff);\n      }\n      this._voltage.stop(endTime);\n      return endTime;\n    }\n  },\n  onended: {\n    get: function () {\n      return this._voltage.onended;\n    },\n    set: function (value) {\n      this._voltage.onended = value;\n    }\n  }\n};\nvar flat = new Float32Array([1, 1]);\nfunction getVoltage(context) {\n  var voltage = context.createBufferSource();\n  var buffer = context.createBuffer(1, 2, context.sampleRate);\n  buffer.getChannelData(0).set(flat);\n  voltage.buffer = buffer;\n  voltage.loop = true;\n  return voltage;\n}\nfunction scale(node) {\n  var gain = node.context.createGain();\n  node.connect(gain);\n  return gain;\n}\nfunction getTimeConstant(time) {\n  return Math.log(time + 1) / Math.log(100);\n}\nfunction getValue(start, end, fromTime, toTime, at) {\n  var difference = end - start;\n  var time = toTime - fromTime;\n  var truncateTime = at - fromTime;\n  var phase = truncateTime / time;\n  var value = start + phase * difference;\n  if (value <= start) {\n    value = start;\n  }\n  if (value >= end) {\n    value = end;\n  }\n  return value;\n}","map":{"version":3,"names":["module","exports","ADSR","audioContext","node","createGain","voltage","_voltage","getVoltage","value","scale","startValue","endValue","_startAmount","_endAmount","_multiplier","connect","gain","Object","defineProperties","props","attack","writable","decay","sustain","release","getReleaseDuration","start","at","target","startAmount","endAmount","_decayFrom","_startedAt","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","setTargetAtTime","getTimeConstant","stop","isTarget","endTime","expFalloff","valueAtTime","getValue","onended","get","set","flat","Float32Array","context","createBufferSource","buffer","createBuffer","sampleRate","getChannelData","loop","time","Math","log","end","fromTime","toTime","difference","truncateTime","phase"],"sources":["/Users/macbook/Desktop/Music/OwnGuitar/node_modules/adsr/index.js"],"sourcesContent":["module.exports = ADSR\n\nfunction ADSR(audioContext){\n  var node = audioContext.createGain()\n\n  var voltage = node._voltage = getVoltage(audioContext)\n  var value = scale(voltage)\n  var startValue = scale(voltage)\n  var endValue = scale(voltage)\n\n  node._startAmount = scale(startValue)\n  node._endAmount = scale(endValue)\n\n  node._multiplier = scale(value)\n  node._multiplier.connect(node)\n  node._startAmount.connect(node)\n  node._endAmount.connect(node)\n\n  node.value = value.gain\n  node.startValue = startValue.gain\n  node.endValue = endValue.gain\n\n  node.startValue.value = 0\n  node.endValue.value = 0\n\n  Object.defineProperties(node, props)\n  return node\n}\n\nvar props = {\n\n  attack: { value: 0, writable: true },\n  decay: { value: 0, writable: true },\n  sustain: { value: 1, writable: true },\n  release: {value: 0, writable: true },\n\n  getReleaseDuration: {\n    value: function(){\n      return this.release\n    }\n  },\n\n  start: {\n    value: function(at){\n      var target = this._multiplier.gain\n      var startAmount = this._startAmount.gain\n      var endAmount = this._endAmount.gain\n\n      this._voltage.start(at)\n      this._decayFrom = this._decayFrom = at+this.attack\n      this._startedAt = at\n\n      var sustain = this.sustain\n\n      target.cancelScheduledValues(at)\n      startAmount.cancelScheduledValues(at)\n      endAmount.cancelScheduledValues(at)\n\n      endAmount.setValueAtTime(0, at)\n\n      if (this.attack){\n        target.setValueAtTime(0, at)\n        target.linearRampToValueAtTime(1, at + this.attack)\n\n        startAmount.setValueAtTime(1, at)\n        startAmount.linearRampToValueAtTime(0, at + this.attack)\n      } else {\n        target.setValueAtTime(1, at)\n        startAmount.setValueAtTime(0, at)\n      }\n\n      if (this.decay){\n        target.setTargetAtTime(sustain, this._decayFrom, getTimeConstant(this.decay))\n      }\n    }\n  },\n\n  stop: {\n    value: function(at, isTarget){\n      if (isTarget){\n        at = at - this.release\n      }\n\n      var endTime = at + this.release\n      if (this.release){\n\n        var target = this._multiplier.gain\n        var startAmount = this._startAmount.gain\n        var endAmount = this._endAmount.gain\n\n        target.cancelScheduledValues(at)\n        startAmount.cancelScheduledValues(at)\n        endAmount.cancelScheduledValues(at)\n\n        var expFalloff = getTimeConstant(this.release)\n\n        // truncate attack (required as linearRamp is removed by cancelScheduledValues)\n        if (this.attack && at < this._decayFrom){\n          var valueAtTime = getValue(0, 1, this._startedAt, this._decayFrom, at)\n          target.linearRampToValueAtTime(valueAtTime, at)\n          startAmount.linearRampToValueAtTime(1-valueAtTime, at)\n          startAmount.setTargetAtTime(0, at, expFalloff)\n        }\n\n        endAmount.setTargetAtTime(1, at, expFalloff)\n        target.setTargetAtTime(0, at, expFalloff)\n      }\n\n      this._voltage.stop(endTime)\n      return endTime\n    }\n  },\n\n  onended: {\n    get: function(){\n      return this._voltage.onended\n    },\n    set: function(value){\n      this._voltage.onended = value\n    }\n  }\n\n}\n\nvar flat = new Float32Array([1,1])\nfunction getVoltage(context){\n  var voltage = context.createBufferSource()\n  var buffer = context.createBuffer(1, 2, context.sampleRate)\n  buffer.getChannelData(0).set(flat)\n  voltage.buffer = buffer\n  voltage.loop = true\n  return voltage\n}\n\nfunction scale(node){\n  var gain = node.context.createGain()\n  node.connect(gain)\n  return gain\n}\n\nfunction getTimeConstant(time){\n  return Math.log(time+1)/Math.log(100)\n}\n\nfunction getValue(start, end, fromTime, toTime, at){\n  var difference = end - start\n  var time = toTime - fromTime\n  var truncateTime = at - fromTime\n  var phase = truncateTime / time\n  var value = start + phase * difference\n\n  if (value <= start) {\n      value = start\n  }\n  if (value >= end) {\n      value = end\n  }\n\n  return value\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}