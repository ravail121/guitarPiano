{"ast":null,"code":"'use strict';\n\nvar isArr = Array.isArray;\nvar isObj = function (o) {\n  return o && typeof o === 'object';\n};\nvar OPTS = {};\nmodule.exports = function (player) {\n  /**\n   * Schedule a list of events to be played at specific time.\n   *\n   * It supports three formats of events for the events list:\n   *\n   * - An array with [time, note]\n   * - An array with [time, object]\n   * - An object with { time: ?, [name|note|midi|key]: ? }\n   *\n   * @param {Float} time - an absolute time to start (or AudioContext's\n   * currentTime if provided number is 0)\n   * @param {Array} events - the events list.\n   * @return {Array} an array of ids\n   *\n   * @example\n   * // Event format: [time, note]\n   * var piano = player(ac, ...).connect(ac.destination)\n   * piano.schedule(0, [ [0, 'C2'], [0.5, 'C3'], [1, 'C4'] ])\n   *\n   * @example\n   * // Event format: an object { time: ?, name: ? }\n   * var drums = player(ac, ...).connect(ac.destination)\n   * drums.schedule(0, [\n   *   { name: 'kick', time: 0 },\n   *   { name: 'snare', time: 0.5 },\n   *   { name: 'kick', time: 1 },\n   *   { name: 'snare', time: 1.5 }\n   * ])\n   */\n  player.schedule = function (time, events) {\n    var now = player.context.currentTime;\n    var when = time < now ? now : time;\n    player.emit('schedule', when, events);\n    var t, o, note, opts;\n    return events.map(function (event) {\n      if (!event) return null;else if (isArr(event)) {\n        t = event[0];\n        o = event[1];\n      } else {\n        t = event.time;\n        o = event;\n      }\n      if (isObj(o)) {\n        note = o.name || o.key || o.note || o.midi || null;\n        opts = o;\n      } else {\n        note = o;\n        opts = OPTS;\n      }\n      return player.start(note, when + (t || 0), opts);\n    });\n  };\n  return player;\n};","map":{"version":3,"names":["isArr","Array","isArray","isObj","o","OPTS","module","exports","player","schedule","time","events","now","context","currentTime","when","emit","t","note","opts","map","event","name","key","midi","start"],"sources":["/Users/macbook/Desktop/Music/OwnGuitar/node_modules/sample-player/lib/scheduler.js"],"sourcesContent":["'use strict'\n\nvar isArr = Array.isArray\nvar isObj = function (o) { return o && typeof o === 'object' }\nvar OPTS = {}\n\nmodule.exports = function (player) {\n  /**\n   * Schedule a list of events to be played at specific time.\n   *\n   * It supports three formats of events for the events list:\n   *\n   * - An array with [time, note]\n   * - An array with [time, object]\n   * - An object with { time: ?, [name|note|midi|key]: ? }\n   *\n   * @param {Float} time - an absolute time to start (or AudioContext's\n   * currentTime if provided number is 0)\n   * @param {Array} events - the events list.\n   * @return {Array} an array of ids\n   *\n   * @example\n   * // Event format: [time, note]\n   * var piano = player(ac, ...).connect(ac.destination)\n   * piano.schedule(0, [ [0, 'C2'], [0.5, 'C3'], [1, 'C4'] ])\n   *\n   * @example\n   * // Event format: an object { time: ?, name: ? }\n   * var drums = player(ac, ...).connect(ac.destination)\n   * drums.schedule(0, [\n   *   { name: 'kick', time: 0 },\n   *   { name: 'snare', time: 0.5 },\n   *   { name: 'kick', time: 1 },\n   *   { name: 'snare', time: 1.5 }\n   * ])\n   */\n  player.schedule = function (time, events) {\n    var now = player.context.currentTime\n    var when = time < now ? now : time\n    player.emit('schedule', when, events)\n    var t, o, note, opts\n    return events.map(function (event) {\n      if (!event) return null\n      else if (isArr(event)) {\n        t = event[0]; o = event[1]\n      } else {\n        t = event.time; o = event\n      }\n\n      if (isObj(o)) {\n        note = o.name || o.key || o.note || o.midi || null\n        opts = o\n      } else {\n        note = o\n        opts = OPTS\n      }\n\n      return player.start(note, when + (t || 0), opts)\n    })\n  }\n  return player\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,KAAK,CAACC,OAAO;AACzB,IAAIC,KAAK,GAAG,UAAUC,CAAC,EAAE;EAAE,OAAOA,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ;AAAC,CAAC;AAC9D,IAAIC,IAAI,GAAG,CAAC,CAAC;AAEbC,MAAM,CAACC,OAAO,GAAG,UAAUC,MAAM,EAAE;EACjC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEA,MAAM,CAACC,QAAQ,GAAG,UAAUC,IAAI,EAAEC,MAAM,EAAE;IACxC,IAAIC,GAAG,GAAGJ,MAAM,CAACK,OAAO,CAACC,WAAW;IACpC,IAAIC,IAAI,GAAGL,IAAI,GAAGE,GAAG,GAAGA,GAAG,GAAGF,IAAI;IAClCF,MAAM,CAACQ,IAAI,CAAC,UAAU,EAAED,IAAI,EAAEJ,MAAM,CAAC;IACrC,IAAIM,CAAC,EAAEb,CAAC,EAAEc,IAAI,EAAEC,IAAI;IACpB,OAAOR,MAAM,CAACS,GAAG,CAAC,UAAUC,KAAK,EAAE;MACjC,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI,MAClB,IAAIrB,KAAK,CAACqB,KAAK,CAAC,EAAE;QACrBJ,CAAC,GAAGI,KAAK,CAAC,CAAC,CAAC;QAAEjB,CAAC,GAAGiB,KAAK,CAAC,CAAC,CAAC;MAC5B,CAAC,MAAM;QACLJ,CAAC,GAAGI,KAAK,CAACX,IAAI;QAAEN,CAAC,GAAGiB,KAAK;MAC3B;MAEA,IAAIlB,KAAK,CAACC,CAAC,CAAC,EAAE;QACZc,IAAI,GAAGd,CAAC,CAACkB,IAAI,IAAIlB,CAAC,CAACmB,GAAG,IAAInB,CAAC,CAACc,IAAI,IAAId,CAAC,CAACoB,IAAI,IAAI,IAAI;QAClDL,IAAI,GAAGf,CAAC;MACV,CAAC,MAAM;QACLc,IAAI,GAAGd,CAAC;QACRe,IAAI,GAAGd,IAAI;MACb;MAEA,OAAOG,MAAM,CAACiB,KAAK,CAACP,IAAI,EAAEH,IAAI,IAAIE,CAAC,IAAI,CAAC,CAAC,EAAEE,IAAI,CAAC;IAClD,CAAC,CAAC;EACJ,CAAC;EACD,OAAOX,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}