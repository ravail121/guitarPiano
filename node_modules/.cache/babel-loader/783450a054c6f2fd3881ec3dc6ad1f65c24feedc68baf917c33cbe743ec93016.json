{"ast":null,"code":"import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n  /**\n   * @param transport The transport object which the event belongs to\n   */\n  constructor(transport, opts) {\n    /**\n     * The unique id of the event\n     */\n    this.id = TransportEvent._eventId++;\n    const options = Object.assign(TransportEvent.getDefaults(), opts);\n    this.transport = transport;\n    this.callback = options.callback;\n    this._once = options.once;\n    this.time = options.time;\n  }\n  static getDefaults() {\n    return {\n      callback: noOp,\n      once: false,\n      time: 0\n    };\n  }\n  /**\n   * Invoke the event callback.\n   * @param  time  The AudioContext time in seconds of the event\n   */\n  invoke(time) {\n    if (this.callback) {\n      this.callback(time);\n      if (this._once) {\n        this.transport.clear(this.id);\n      }\n    }\n  }\n  /**\n   * Clean up\n   */\n  dispose() {\n    this.callback = undefined;\n    return this;\n  }\n}\n/**\n * Current ID counter\n */\nTransportEvent._eventId = 0;","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,mBAAmB;AAUxC;;;;;AAKA,OAAM,MAAOC,cAAc;EA2B1B;;;EAGAC,YAAYC,SAAoB,EAAEC,IAAoC;IAvBtE;;;IAGA,OAAE,GAAWH,cAAc,CAACI,QAAQ,EAAE;IAsBrC,MAAMC,OAAO,GAA0BC,MAAM,CAACC,MAAM,CAACP,cAAc,CAACQ,WAAW,EAAE,EAAEL,IAAI,CAAC;IAExF,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACO,QAAQ,GAAGJ,OAAO,CAACI,QAAQ;IAChC,IAAI,CAACC,KAAK,GAAGL,OAAO,CAACM,IAAI;IACzB,IAAI,CAACC,IAAI,GAAGP,OAAO,CAACO,IAAI;EACzB;EAEA,OAAOJ,WAAW;IACjB,OAAO;MACNC,QAAQ,EAAEV,IAAI;MACdY,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;KACN;EACF;EAOA;;;;EAIAC,MAAM,CAACD,IAAa;IACnB,IAAI,IAAI,CAACH,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,CAACG,IAAI,CAAC;MACnB,IAAI,IAAI,CAACF,KAAK,EAAE;QACf,IAAI,CAACR,SAAS,CAACY,KAAK,CAAC,IAAI,CAACC,EAAE,CAAC;;;EAGhC;EAEA;;;EAGAC,OAAO;IACN,IAAI,CAACP,QAAQ,GAAGQ,SAAS;IACzB,OAAO,IAAI;EACZ;;AAxBA;;;AAGejB,uBAAQ,GAAG,CAAC","names":["noOp","TransportEvent","constructor","transport","opts","_eventId","options","Object","assign","getDefaults","callback","_once","once","time","invoke","clear","id","dispose","undefined"],"sources":["/Users/macbook/Desktop/Music/OwnGuitar/node_modules/tone/Tone/core/clock/TransportEvent.ts"],"sourcesContent":["import { Seconds, Ticks } from \"../type/Units\";\nimport { noOp } from \"../util/Interface\";\n\ntype Transport = import(\"../clock/Transport\").Transport;\n\nexport interface TransportEventOptions {\n\tcallback: (time: number) => void;\n\tonce: boolean;\n\ttime: Ticks;\n}\n\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n\n\t/**\n\t * Reference to the Transport that created it\n\t */\n\tprotected transport: Transport;\n\n\t/**\n\t * The unique id of the event\n\t */\n\tid: number = TransportEvent._eventId++;\n\n\t/**\n\t * The time the event starts\n\t */\n\ttime: Ticks;\n\n\t/**\n\t * The callback to invoke\n\t */\n\tprivate callback?: (time: Seconds) => void;\n\n\t/**\n\t * If the event should be removed after being invoked.\n\t */\n\tprivate _once: boolean;\n\n\t/**\n\t * @param transport The transport object which the event belongs to\n\t */\n\tconstructor(transport: Transport, opts: Partial<TransportEventOptions>) {\n\n\t\tconst options: TransportEventOptions = Object.assign(TransportEvent.getDefaults(), opts);\n\n\t\tthis.transport = transport;\n\t\tthis.callback = options.callback;\n\t\tthis._once = options.once;\n\t\tthis.time = options.time;\n\t}\n\n\tstatic getDefaults(): TransportEventOptions {\n\t\treturn {\n\t\t\tcallback: noOp,\n\t\t\tonce: false,\n\t\t\ttime: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Current ID counter\n\t */\n\tprivate static _eventId = 0;\n\n\t/**\n\t * Invoke the event callback.\n\t * @param  time  The AudioContext time in seconds of the event\n\t */\n\tinvoke(time: Seconds): void {\n\t\tif (this.callback) {\n\t\t\tthis.callback(time);\n\t\t\tif (this._once) {\n\t\t\t\tthis.transport.clear(this.id);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clean up\n\t */\n\tdispose(): this {\n\t\tthis.callback = undefined;\n\t\treturn this;\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}