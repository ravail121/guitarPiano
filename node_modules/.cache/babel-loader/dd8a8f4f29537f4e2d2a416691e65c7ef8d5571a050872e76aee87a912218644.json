{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\nvar react = require('react');\nvar Soundfont = _interopDefault(require('soundfont-player'));\nvar tone = require('tone');\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\nvar runtime_1 = /*#__PURE__*/createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n    function define(obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key];\n    }\n    try {\n      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n      define({}, \"\");\n    } catch (err) {\n      define = function define(obj, key, value) {\n        return obj[key] = value;\n      };\n    }\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function () {\n      return this;\n    });\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = GeneratorFunctionPrototype;\n    define(Gp, \"constructor\", GeneratorFunctionPrototype);\n    define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        define(prototype, method, function (arg) {\n          return this._invoke(method, arg);\n        });\n      });\n    }\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction ||\n      // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n      var previousPromise;\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,\n        // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n      this._invoke = enqueue;\n    }\n    defineIteratorMethods(AsyncIterator.prototype);\n    define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n      return this;\n    });\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n          return doneResult();\n        }\n        context.method = method;\n        context.arg = arg;\n        while (true) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n        return ContinueSentinel;\n      }\n      var record = tryCatch(method, delegate.iterator, context.arg);\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n      var info = record.arg;\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    define(Gp, iteratorSymbol, function () {\n      return this;\n    });\n    define(Gp, \"toString\", function () {\n      return \"[object Generator]\";\n    });\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n      this.tryEntries.push(entry);\n    }\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n    exports.keys = function (object) {\n      var keys = [];\n      for (var key in object) {\n        keys.push(key);\n      }\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n        next.done = true;\n        return next;\n      };\n    };\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n            next = function next() {\n              while (++i < iterable.length) {\n                if (hasOwn.call(iterable, i)) {\n                  next.value = iterable[i];\n                  next.done = false;\n                  return next;\n                }\n              }\n              next.value = undefined$1;\n              next.done = true;\n              return next;\n            };\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n      return {\n        next: doneResult\n      };\n    }\n    exports.values = values;\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n    Context.prototype = {\n      constructor: Context,\n      reset: function reset(skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function stop() {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n        return this.rval;\n      },\n      dispatchException: function dispatchException(exception) {\n        if (this.done) {\n          throw exception;\n        }\n        var context = this;\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n          return !!caught;\n        }\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function abrupt(type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n        return this.complete(record);\n      },\n      complete: function complete(record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n        return ContinueSentinel;\n      },\n      finish: function finish(finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function _catch(tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, in modern engines\n    // we can explicitly access globalThis. In older engines we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    if (typeof globalThis === \"object\") {\n      globalThis.regeneratorRuntime = runtime;\n    } else {\n      Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n    }\n  }\n});\nvar makePlayer = /*#__PURE__*/function () {\n  var _ref = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(instrument, tuning, onChange) {\n    var _yield$instrument, _play, dispose, resolvers, playing, setPlaying;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return instrument(tuning);\n          case 2:\n            _yield$instrument = _context.sent;\n            _play = _yield$instrument.play;\n            dispose = _yield$instrument.dispose;\n            resolvers = {};\n            playing = tuning.map(function () {\n              return false;\n            });\n            setPlaying = function setPlaying(string, value) {\n              if (playing[string] !== value) {\n                playing[string] = value;\n                setTimeout(function () {\n                  return onChange([].concat(playing));\n                }, 0);\n              }\n            };\n            return _context.abrupt(\"return\", {\n              play: function play(string, fret, when) {\n                if (when === void 0) {\n                  when = 0;\n                }\n                return new Promise(function (resolve) {\n                  var _resolvers$string;\n                  (_resolvers$string = resolvers[string]) == null ? void 0 : _resolvers$string.call(resolvers, when === 0);\n                  if (fret < 0) return resolve();\n                  var startTimeout = setTimeout(function () {\n                    return setPlaying(string, true);\n                  }, when * 1000);\n                  var endTimeout = setTimeout(resolvers[string] = function (change) {\n                    delete resolvers[string];\n                    clearTimeout(startTimeout);\n                    clearTimeout(endTimeout);\n                    resolve();\n                    if (!change) setPlaying(string, false);\n                  }, 3000 + when * 1000);\n                  _play(string, fret, when);\n                });\n              },\n              dispose: dispose\n            });\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nfunction withSoundFont(instrumentName, options) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(tuning) {\n      var audioContext, player;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              audioContext = new (window.AudioContext || window.webkitAudioContext)();\n              _context.next = 3;\n              return Soundfont.instrument(audioContext, instrumentName, _extends({}, options));\n            case 3:\n              player = _context.sent;\n              return _context.abrupt(\"return\", {\n                play: function play(string, fret, when) {\n                  if (when === void 0) {\n                    when = 0;\n                  }\n                  player.play(tuning[string] + fret, audioContext.currentTime + when, {\n                    duration: 4,\n                    gain: 4\n                  });\n                },\n                dispose: function dispose() {\n                  player.stop();\n                  audioContext.close();\n                }\n              });\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nvar toMidi = function toMidi(note) {\n  if (typeof note === 'string') return tone.Frequency(note).toMidi();\n  return note;\n};\nvar closest = function closest(midi, samples) {\n  var _ref;\n  var min = Object.keys(samples)[0];\n  Object.keys(samples).forEach(function (key) {\n    if (Math.abs(midi - toMidi(key)) < Math.abs(midi - toMidi(min))) {\n      min = key;\n    }\n  });\n  return _ref = {}, _ref[min] = samples[min], _ref;\n};\nfunction withSamples(samples) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(tuning) {\n      var synths;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Promise.all(tuning.map(function (midi) {\n                return new Promise(function (resolve) {\n                  var synth = new tone.Sampler(closest(midi, samples), function () {\n                    return resolve(synth);\n                  }).toDestination();\n                });\n              }));\n            case 2:\n              synths = _context.sent;\n              return _context.abrupt(\"return\", {\n                play: function play(string, fret, when) {\n                  if (when === void 0) {\n                    when = 0;\n                  }\n                  synths[string].triggerAttackRelease(tone.Frequency(tuning[string] + fret, 'midi').toFrequency(), 4, tone.immediate() + when);\n                },\n                dispose: function dispose() {\n                  return synths.map(function (synth) {\n                    return synth.dispose();\n                  });\n                }\n              });\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nvar defaultInstrument = /*#__PURE__*/withSoundFont('acoustic_guitar_nylon');\nfunction useSound(props) {\n  var fretting = props.fretting,\n    tuning = props.tuning,\n    muted = props.muted,\n    _props$instrument = props.instrument,\n    instrument = _props$instrument === void 0 ? defaultInstrument : _props$instrument;\n  var _useState = react.useState(),\n    player = _useState[0],\n    setPlayer = _useState[1];\n  var _useState2 = react.useState(tuning.map(function () {\n      return false;\n    })),\n    playing = _useState2[0],\n    setPlaying = _useState2[1];\n  react.useEffect(function () {\n    var promise = makePlayer(instrument, tuning, setPlaying);\n    promise.then(setPlayer);\n    return function () {\n      setPlayer(undefined);\n      promise.then(function (player) {\n        player.dispose();\n      });\n    };\n  }, [instrument, tuning]);\n  var play = react.useCallback(function (string, when) {\n    var _fretting$string;\n    if (when === void 0) {\n      when = 0;\n    }\n    if (!muted) player == null ? void 0 : player.play(string, (_fretting$string = fretting[string]) != null ? _fretting$string : 0, when);\n  }, [muted, player, fretting]);\n  var strum = react.useCallback(function (up) {\n    return tuning.forEach(function (_, i) {\n      return play(!up ? tuning.length - i - 1 : i, 0.05 * i);\n    });\n  }, [tuning, play]);\n  return {\n    play: play,\n    strum: strum,\n    playing: playing,\n    loading: !player\n  };\n}\nexports.default = useSound;\nexports.withSamples = withSamples;\nexports.withSoundFont = withSoundFont;","map":{"version":3,"mappings":"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","names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","instrument","tuning","onChange","_context","_yield$instrument","play","dispose","resolvers","playing","map","setPlaying","string","setTimeout","fret","when","startTimeout","endTimeout","change","clearTimeout","withSoundFont","instrumentName","options","audioContext","window","AudioContext","webkitAudioContext","Soundfont","player","currentTime","duration","gain","close","toMidi","note","Frequency","closest","midi","samples","min","Math","abs","withSamples","all","synth","Sampler","toDestination","synths","triggerAttackRelease","toFrequency","immediate","defaultInstrument","useSound","props","fretting","muted","_props$instrument","useState","setPlayer","useEffect","promise","makePlayer","useCallback","strum","up","_","loading"],"sources":["/Users/macbook/Desktop/Music/OwnGuitar/node_modules/regenerator-runtime/runtime.js","/Users/macbook/Desktop/Music/OwnGuitar/node_modules/react-guitar-sound/src/util/player.ts","/Users/macbook/Desktop/Music/OwnGuitar/node_modules/react-guitar-sound/src/instruments/sound-font.ts","/Users/macbook/Desktop/Music/OwnGuitar/node_modules/react-guitar-sound/src/instruments/samples.ts","/Users/macbook/Desktop/Music/OwnGuitar/node_modules/react-guitar-sound/src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export type StringInstrument = (tuning: number[]) => Promise<{\n  play: (string: number, fret: number, when: number) => void\n  dispose: () => void\n}>\n\nexport type Player = {\n  play: (string: number, fret: number, when: number) => Promise<void>\n  dispose: () => void\n}\n\nexport default async (\n  instrument: StringInstrument,\n  tuning: number[],\n  onChange: (playing: boolean[]) => void\n): Promise<Player> => {\n  const { play, dispose } = await instrument(tuning)\n  const resolvers: Partial<{ [K: number]: (change?: boolean) => void }> = {}\n  const playing = tuning.map(() => false)\n  const setPlaying = (string: number, value: boolean) => {\n    if (playing[string] !== value) {\n      playing[string] = value\n      setTimeout(() => onChange([...playing]), 0)\n    }\n  }\n\n  return {\n    play: (string, fret, when = 0) =>\n      new Promise((resolve) => {\n        resolvers[string]?.(when === 0)\n        if (fret < 0) return resolve()\n        const startTimeout = setTimeout(\n          () => setPlaying(string, true),\n          when * 1000\n        )\n        const endTimeout = setTimeout(\n          (resolvers[string] = (change) => {\n            delete resolvers[string]\n            clearTimeout(startTimeout)\n            clearTimeout(endTimeout)\n            resolve()\n            if (!change) setPlaying(string, false)\n          }),\n          3000 + when * 1000\n        )\n        play(string, fret, when)\n      }),\n    dispose,\n  }\n}\n","import Soundfont, { InstrumentName } from 'soundfont-player'\nimport { StringInstrument } from '../util/player'\n\nexport default function withSoundFont(\n  instrumentName: InstrumentName,\n  options?: {\n    format?: 'mp3' | 'ogg'\n    soundfont?: 'FluidR3_GM' | 'MusyngKite'\n  }\n): StringInstrument {\n  return async (tuning) => {\n    const audioContext = new (window.AudioContext ||\n      ((window as any).webkitAudioContext as typeof AudioContext))()\n    const player = await Soundfont.instrument(audioContext, instrumentName, {\n      ...options,\n    })\n\n    return {\n      play: (string, fret, when = 0) => {\n        player.play(\n          (tuning[string] + fret) as any,\n          audioContext.currentTime + when,\n          {\n            duration: 4,\n            gain: 4,\n          }\n        )\n      },\n      dispose: () => {\n        player.stop()\n        audioContext.close()\n      },\n    }\n  }\n}\n","import { Frequency, Sampler, SamplerOptions, immediate } from 'tone'\nimport { StringInstrument } from '../util/player'\n\nconst toMidi = (note: string | number) => {\n  if (typeof note === 'string') return Frequency(note).toMidi()\n  return note\n}\n\nconst closest = (midi: number, samples: SamplerOptions['urls']) => {\n  let min = Object.keys(samples)[0]\n  Object.keys(samples).forEach((key) => {\n    if (Math.abs(midi - toMidi(key)) < Math.abs(midi - toMidi(min))) {\n      min = key\n    }\n  })\n  return { [min]: samples[min] }\n}\n\nexport default function withSamples(\n  samples: SamplerOptions['urls']\n): StringInstrument {\n  return async (tuning) => {\n    const synths = await Promise.all(\n      tuning.map(\n        (midi) =>\n          new Promise<Sampler>((resolve) => {\n            const synth: Sampler = new Sampler(closest(midi, samples), () =>\n              resolve(synth)\n            ).toDestination()\n          })\n      )\n    )\n    return {\n      play: (string, fret, when = 0) => {\n        synths[string].triggerAttackRelease(\n          Frequency(tuning[string] + fret, 'midi').toFrequency(),\n          4,\n          immediate() + when\n        )\n      },\n      dispose: () => synths.map((synth) => synth.dispose()),\n    }\n  }\n}\n","import { useEffect, useState, useCallback } from 'react'\nimport makePlayer, { Player, StringInstrument } from './util/player'\nimport withSoundFont from './instruments/sound-font'\nimport withSamples from './instruments/samples'\n\nexport { StringInstrument, withSoundFont, withSamples }\n\nconst defaultInstrument = withSoundFont('acoustic_guitar_nylon')\n\nexport default function useSound(props: {\n  instrument?: StringInstrument\n  fretting: number[]\n  tuning: number[]\n  muted?: boolean\n}) {\n  const { fretting, tuning, muted, instrument = defaultInstrument } = props\n  const [player, setPlayer] = useState<Player>()\n  const [playing, setPlaying] = useState(tuning.map(() => false))\n\n  useEffect(() => {\n    const promise = makePlayer(instrument, tuning, setPlaying)\n    promise.then(setPlayer)\n\n    return () => {\n      setPlayer(undefined)\n      promise.then((player) => {\n        player.dispose()\n      })\n    }\n  }, [instrument, tuning])\n\n  const play = useCallback(\n    (string: number, when: number = 0) => {\n      if (!muted) player?.play(string, fretting[string] ?? 0, when)\n    },\n    [muted, player, fretting]\n  )\n\n  const strum = useCallback(\n    (up?: boolean) =>\n      tuning.forEach((_, i) => play(!up ? tuning.length - i - 1 : i, 0.05 * i)),\n    [tuning, play]\n  )\n\n  return { play, strum, playing, loading: !player }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}