{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Music/OwnGuitar/src/react-piano-master/src/Piano.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport ControlledPiano from './ControlledPiano';\nimport Keyboard from './Keyboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Piano extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      activeNotes: this.props.activeNotes || []\n    };\n    this.handlePlayNoteInput = midiNumber => {\n      if (midiNumber == 60) {\n        this.props.guitarNotes([1, 0, 0, 0, 0, 0]);\n      }\n      this.setState(prevState => {\n        // Need to be handled inside setState in order to set prevActiveNotes without\n        // race conditions.\n        if (this.props.onPlayNoteInput) {\n          this.props.onPlayNoteInput(midiNumber, {\n            prevActiveNotes: prevState.activeNotes\n          });\n        }\n\n        // Don't append note to activeNotes if it's already present\n        if (prevState.activeNotes.includes(midiNumber)) {\n          return null;\n        }\n        return {\n          activeNotes: prevState.activeNotes.concat(midiNumber)\n        };\n      });\n    };\n    this.handleStopNoteInput = midiNumber => {\n      this.setState(prevState => {\n        // Need to be handled inside setState in order to set prevActiveNotes without\n        // race conditions.\n        if (this.props.onStopNoteInput) {\n          this.props.onStopNoteInput(midiNumber, {\n            prevActiveNotes: this.state.activeNotes\n          });\n        }\n        return {\n          activeNotes: prevState.activeNotes.filter(note => midiNumber !== note)\n        };\n      });\n    };\n  }\n  componentDidUpdate(prevProps) {\n    // Make activeNotes \"controllable\" by using internal\n    // state by default, but allowing prop overrides.\n    if (prevProps.activeNotes !== this.props.activeNotes && this.state.activeNotes !== this.props.activeNotes) {\n      this.setState({\n        activeNotes: this.props.activeNotes || []\n      });\n    }\n  }\n  render() {\n    const {\n      activeNotes,\n      onPlayNoteInput,\n      onStopNoteInput,\n      accidentalType,\n      ...otherProps\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(ControlledPiano, {\n      activeNotes: this.state.activeNotes,\n      onPlayNoteInput: this.handlePlayNoteInput,\n      onStopNoteInput: this.handleStopNoteInput,\n      accidentalType: accidentalType,\n      ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n}\nPiano.propTypes = {\n  noteRange: PropTypes.object.isRequired,\n  activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired),\n  playNote: PropTypes.func.isRequired,\n  stopNote: PropTypes.func.isRequired,\n  onPlayNoteInput: PropTypes.func,\n  onStopNoteInput: PropTypes.func,\n  renderNoteLabel: PropTypes.func,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  width: PropTypes.number,\n  keyWidthToHeight: PropTypes.number,\n  keyboardShortcuts: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    midiNumber: PropTypes.number.isRequired,\n    natural: PropTypes.string.isRequired\n  }))\n};\nexport default Piano;","map":{"version":3,"names":["React","PropTypes","classNames","difference","ControlledPiano","Keyboard","Piano","Component","state","activeNotes","props","handlePlayNoteInput","midiNumber","guitarNotes","setState","prevState","onPlayNoteInput","prevActiveNotes","includes","concat","handleStopNoteInput","onStopNoteInput","filter","note","componentDidUpdate","prevProps","render","accidentalType","otherProps","propTypes","noteRange","object","isRequired","arrayOf","number","playNote","func","stopNote","renderNoteLabel","className","string","disabled","bool","width","keyWidthToHeight","keyboardShortcuts","shape","key","natural"],"sources":["/Users/macbook/Desktop/Music/OwnGuitar/src/react-piano-master/src/Piano.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport ControlledPiano from './ControlledPiano';\nimport Keyboard from './Keyboard';\n\nclass Piano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired),\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func,\n    onStopNoteInput: PropTypes.func,\n    renderNoteLabel: PropTypes.func,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n        natural: PropTypes.string.isRequired\n      }),\n    ),\n  };\n\n  state = {\n    activeNotes: this.props.activeNotes || [],\n  };\n\n  componentDidUpdate(prevProps) {\n    // Make activeNotes \"controllable\" by using internal\n    // state by default, but allowing prop overrides.\n    if (\n      prevProps.activeNotes !== this.props.activeNotes &&\n      this.state.activeNotes !== this.props.activeNotes\n    ) {\n      this.setState({\n        activeNotes: this.props.activeNotes || [],\n      });\n    }\n  }\n\n  handlePlayNoteInput = (midiNumber) => {\n    \n    if(midiNumber==60){\n      this.props.guitarNotes([1 , 0, 0, 0, 0, 0])\n    } \n    this.setState((prevState) => {\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      if (this.props.onPlayNoteInput) {\n        this.props.onPlayNoteInput(midiNumber, { prevActiveNotes: prevState.activeNotes });\n      }\n\n      // Don't append note to activeNotes if it's already present\n      if (prevState.activeNotes.includes(midiNumber)) {\n        return null;\n      }\n      return {\n        activeNotes: prevState.activeNotes.concat(midiNumber),\n      };\n    });\n  };\n\n  handleStopNoteInput = (midiNumber) => {\n    this.setState((prevState) => {\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      if (this.props.onStopNoteInput) {\n        this.props.onStopNoteInput(midiNumber, { prevActiveNotes: this.state.activeNotes });\n      }\n      return {\n        activeNotes: prevState.activeNotes.filter((note) => midiNumber !== note),\n      };\n    });\n  };\n\n  render() {\n    const { activeNotes, onPlayNoteInput, onStopNoteInput, accidentalType, ...otherProps } = this.props;\n    return (\n      <ControlledPiano\n        activeNotes={this.state.activeNotes}\n        onPlayNoteInput={this.handlePlayNoteInput}\n        onStopNoteInput={this.handleStopNoteInput}\n        accidentalType={accidentalType}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nexport default Piano;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}