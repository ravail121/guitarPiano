{"ast":null,"code":"'use strict';\n\nvar load = require('audio-loader');\nvar player = require('sample-player');\n\n/**\n * Load a soundfont instrument. It returns a promise that resolves to a\n * instrument object.\n *\n * The instrument object returned by the promise has the following properties:\n *\n * - name: the instrument name\n * - play: A function to play notes from the buffer with the signature\n * `play(note, time, duration, options)`\n *\n *\n * The valid options are:\n *\n * - `format`: the soundfont format. 'mp3' by default. Can be 'ogg'\n * - `soundfont`: the soundfont name. 'MusyngKite' by default. Can be 'FluidR3_GM'\n * - `nameToUrl` <Function>: a function to convert from instrument names to URL\n * - `destination`: by default Soundfont uses the `audioContext.destination` but you can override it.\n * - `gain`: the gain of the player (1 by default)\n * - `notes`: an array of the notes to decode. It can be an array of strings\n * with note names or an array of numbers with midi note numbers. This is a\n * performance option: since decoding mp3 is a cpu intensive process, you can limit\n * limit the number of notes you want and reduce the time to load the instrument.\n *\n * @param {AudioContext} ac - the audio context\n * @param {String} name - the instrument name. For example: 'acoustic_grand_piano'\n * @param {Object} options - (Optional) the same options as Soundfont.loadBuffers\n * @return {Promise}\n *\n * @example\n * var Soundfont = require('sounfont-player')\n * Soundfont.instrument('marimba').then(function (marimba) {\n *   marimba.play('C4')\n * })\n */\nfunction instrument(ac, name, options) {\n  if (arguments.length === 1) return function (n, o) {\n    return instrument(ac, n, o);\n  };\n  var opts = options || {};\n  var isUrl = opts.isSoundfontURL || isSoundfontURL;\n  var toUrl = opts.nameToUrl || nameToUrl;\n  var url = isUrl(name) ? name : toUrl(name, opts.soundfont, opts.format);\n  return load(ac, url, {\n    only: opts.only || opts.notes\n  }).then(function (buffers) {\n    var p = player(ac, buffers, opts).connect(opts.destination ? opts.destination : ac.destination);\n    p.url = url;\n    p.name = name;\n    return p;\n  });\n}\nfunction isSoundfontURL(name) {\n  return /\\.js(\\?.*)?$/i.test(name);\n}\n\n/**\n * Given an instrument name returns a URL to to the Benjamin Gleitzman's\n * package of [pre-rendered sound fonts](https://github.com/gleitz/midi-js-soundfonts)\n *\n * @param {String} name - instrument name\n * @param {String} soundfont - (Optional) the soundfont name. One of 'FluidR3_GM'\n * or 'MusyngKite' ('MusyngKite' by default)\n * @param {String} format - (Optional) Can be 'mp3' or 'ogg' (mp3 by default)\n * @returns {String} the Soundfont file url\n * @example\n * var Soundfont = require('soundfont-player')\n * Soundfont.nameToUrl('marimba', 'mp3')\n */\nfunction nameToUrl(name, sf, format) {\n  format = format === 'ogg' ? format : 'mp3';\n  sf = sf === 'FluidR3_GM' ? sf : 'MusyngKite';\n  return 'https://gleitz.github.io/midi-js-soundfonts/' + sf + '/' + name + '-' + format + '.js';\n}\n\n// In the 1.0.0 release it will be:\n// var Soundfont = {}\nvar Soundfont = require('./legacy');\nSoundfont.instrument = instrument;\nSoundfont.nameToUrl = nameToUrl;\nif (typeof module === 'object' && module.exports) module.exports = Soundfont;\nif (typeof window !== 'undefined') window.Soundfont = Soundfont;","map":{"version":3,"names":["load","require","player","instrument","ac","name","options","arguments","length","n","o","opts","isUrl","isSoundfontURL","toUrl","nameToUrl","url","soundfont","format","only","notes","then","buffers","p","connect","destination","test","sf","Soundfont","module","exports","window"],"sources":["/Users/macbook/Desktop/Music/OwnGuitar/node_modules/soundfont-player/lib/index.js"],"sourcesContent":["'use strict'\n\nvar load = require('audio-loader')\nvar player = require('sample-player')\n\n/**\n * Load a soundfont instrument. It returns a promise that resolves to a\n * instrument object.\n *\n * The instrument object returned by the promise has the following properties:\n *\n * - name: the instrument name\n * - play: A function to play notes from the buffer with the signature\n * `play(note, time, duration, options)`\n *\n *\n * The valid options are:\n *\n * - `format`: the soundfont format. 'mp3' by default. Can be 'ogg'\n * - `soundfont`: the soundfont name. 'MusyngKite' by default. Can be 'FluidR3_GM'\n * - `nameToUrl` <Function>: a function to convert from instrument names to URL\n * - `destination`: by default Soundfont uses the `audioContext.destination` but you can override it.\n * - `gain`: the gain of the player (1 by default)\n * - `notes`: an array of the notes to decode. It can be an array of strings\n * with note names or an array of numbers with midi note numbers. This is a\n * performance option: since decoding mp3 is a cpu intensive process, you can limit\n * limit the number of notes you want and reduce the time to load the instrument.\n *\n * @param {AudioContext} ac - the audio context\n * @param {String} name - the instrument name. For example: 'acoustic_grand_piano'\n * @param {Object} options - (Optional) the same options as Soundfont.loadBuffers\n * @return {Promise}\n *\n * @example\n * var Soundfont = require('sounfont-player')\n * Soundfont.instrument('marimba').then(function (marimba) {\n *   marimba.play('C4')\n * })\n */\nfunction instrument (ac, name, options) {\n  if (arguments.length === 1) return function (n, o) { return instrument(ac, n, o) }\n  var opts = options || {}\n  var isUrl = opts.isSoundfontURL || isSoundfontURL\n  var toUrl = opts.nameToUrl || nameToUrl\n  var url = isUrl(name) ? name : toUrl(name, opts.soundfont, opts.format)\n\n  return load(ac, url, { only: opts.only || opts.notes }).then(function (buffers) {\n    var p = player(ac, buffers, opts).connect(opts.destination ? opts.destination : ac.destination)\n    p.url = url\n    p.name = name\n    return p\n  })\n}\n\nfunction isSoundfontURL (name) {\n  return /\\.js(\\?.*)?$/i.test(name)\n}\n\n/**\n * Given an instrument name returns a URL to to the Benjamin Gleitzman's\n * package of [pre-rendered sound fonts](https://github.com/gleitz/midi-js-soundfonts)\n *\n * @param {String} name - instrument name\n * @param {String} soundfont - (Optional) the soundfont name. One of 'FluidR3_GM'\n * or 'MusyngKite' ('MusyngKite' by default)\n * @param {String} format - (Optional) Can be 'mp3' or 'ogg' (mp3 by default)\n * @returns {String} the Soundfont file url\n * @example\n * var Soundfont = require('soundfont-player')\n * Soundfont.nameToUrl('marimba', 'mp3')\n */\nfunction nameToUrl (name, sf, format) {\n  format = format === 'ogg' ? format : 'mp3'\n  sf = sf === 'FluidR3_GM' ? sf : 'MusyngKite'\n  return 'https://gleitz.github.io/midi-js-soundfonts/' + sf + '/' + name + '-' + format + '.js'\n}\n\n// In the 1.0.0 release it will be:\n// var Soundfont = {}\nvar Soundfont = require('./legacy')\nSoundfont.instrument = instrument\nSoundfont.nameToUrl = nameToUrl\n\nif (typeof module === 'object' && module.exports) module.exports = Soundfont\nif (typeof window !== 'undefined') window.Soundfont = Soundfont\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,cAAc,CAAC;AAClC,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAe,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,UAAU,CAAEC,EAAE,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACtC,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAOP,UAAU,CAACC,EAAE,EAAEK,CAAC,EAAEC,CAAC,CAAC;EAAC,CAAC;EAClF,IAAIC,IAAI,GAAGL,OAAO,IAAI,CAAC,CAAC;EACxB,IAAIM,KAAK,GAAGD,IAAI,CAACE,cAAc,IAAIA,cAAc;EACjD,IAAIC,KAAK,GAAGH,IAAI,CAACI,SAAS,IAAIA,SAAS;EACvC,IAAIC,GAAG,GAAGJ,KAAK,CAACP,IAAI,CAAC,GAAGA,IAAI,GAAGS,KAAK,CAACT,IAAI,EAAEM,IAAI,CAACM,SAAS,EAAEN,IAAI,CAACO,MAAM,CAAC;EAEvE,OAAOlB,IAAI,CAACI,EAAE,EAAEY,GAAG,EAAE;IAAEG,IAAI,EAAER,IAAI,CAACQ,IAAI,IAAIR,IAAI,CAACS;EAAM,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,OAAO,EAAE;IAC9E,IAAIC,CAAC,GAAGrB,MAAM,CAACE,EAAE,EAAEkB,OAAO,EAAEX,IAAI,CAAC,CAACa,OAAO,CAACb,IAAI,CAACc,WAAW,GAAGd,IAAI,CAACc,WAAW,GAAGrB,EAAE,CAACqB,WAAW,CAAC;IAC/FF,CAAC,CAACP,GAAG,GAAGA,GAAG;IACXO,CAAC,CAAClB,IAAI,GAAGA,IAAI;IACb,OAAOkB,CAAC;EACV,CAAC,CAAC;AACJ;AAEA,SAASV,cAAc,CAAER,IAAI,EAAE;EAC7B,OAAO,eAAe,CAACqB,IAAI,CAACrB,IAAI,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASU,SAAS,CAAEV,IAAI,EAAEsB,EAAE,EAAET,MAAM,EAAE;EACpCA,MAAM,GAAGA,MAAM,KAAK,KAAK,GAAGA,MAAM,GAAG,KAAK;EAC1CS,EAAE,GAAGA,EAAE,KAAK,YAAY,GAAGA,EAAE,GAAG,YAAY;EAC5C,OAAO,8CAA8C,GAAGA,EAAE,GAAG,GAAG,GAAGtB,IAAI,GAAG,GAAG,GAAGa,MAAM,GAAG,KAAK;AAChG;;AAEA;AACA;AACA,IAAIU,SAAS,GAAG3B,OAAO,CAAC,UAAU,CAAC;AACnC2B,SAAS,CAACzB,UAAU,GAAGA,UAAU;AACjCyB,SAAS,CAACb,SAAS,GAAGA,SAAS;AAE/B,IAAI,OAAOc,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,OAAO,EAAED,MAAM,CAACC,OAAO,GAAGF,SAAS;AAC5E,IAAI,OAAOG,MAAM,KAAK,WAAW,EAAEA,MAAM,CAACH,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}